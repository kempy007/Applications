# ---
# # Source: akash-node/templates/serviceaccount.yaml
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: akash-node
#   namespace: akash-services
#   labels:
#     helm.sh/chart: akash-node-5.3.3
#     app.kubernetes.io/name: akash-node
#     app.kubernetes.io/instance: akash-node
#     app.kubernetes.io/version: "0.22.0"
#     app.kubernetes.io/managed-by: Helm
# ---
# # Source: akash-node/templates/configmap.yaml
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: akash-node-config
#   namespace: akash-services
#   labels:
#     helm.sh/chart: akash-node-5.3.3
#     app.kubernetes.io/name: akash-node
#     app.kubernetes.io/instance: akash-node
#     app.kubernetes.io/version: "0.22.0"
#     app.kubernetes.io/managed-by: Helm
# data:
#   init.sh: |
#     #!/bin/bash
#     set -x
    
#     #Install utils
#     apt update && apt -y --no-install-recommends install ca-certificates curl jq > /dev/null 2>&1
    
#     # fail fast should there be a problem installing curl / jq packages
#     type curl || exit 1
#     type jq || exit 1
    
#     #Check if Home data exists, if not create it.
#     if [ ! -d "$AKASH_HOME/data" ]
#     then
#     /bin/akash init --chain-id "$AKASH_CHAIN_ID" "$AKASH_MONIKER"
#     cd "$AKASH_HOME/data" || exit
#     curl -s "$AKASH_NET/genesis.json" > "$AKASH_HOME/config/genesis.json"
#     if [ "$AKASH_STATESYNC_ENABLE" == true ]; then
#       echo "state-sync is enabled, figure the right trust height & derive its hash"
    
#       export SNAP_RPC1="https://akash-rpc.polkachu.com:443"
#       export SNAP_RPC2="https://akash-rpc.polkachu.com:443"
    
#       LATEST_HEIGHT=$(curl -Ls "$SNAP_RPC1/block" | jq -r .result.block.header.height)
#       HEIGHT_OFFSET="2000"
#       BLOCK_HEIGHT=$((LATEST_HEIGHT - HEIGHT_OFFSET))
#       TRUST_HASH=$(curl -Ls "$SNAP_RPC1/block?height=$BLOCK_HEIGHT" | jq -r .result.block_id.hash)
    
#       echo "TRUST HEIGHT: $BLOCK_HEIGHT"
#       echo "TRUST HASH: $TRUST_HASH"
    
#       export AKASH_STATESYNC_TRUST_HEIGHT=$BLOCK_HEIGHT
#       export AKASH_STATESYNC_TRUST_HASH=$TRUST_HASH
    
#     else
#       if [ "$AKASH_CHAIN_ID" == "akashnet-2" ]; then
#         apt -y --no-install-recommends install aria2 lz4 liblz4-tool wget > /dev/null 2>&1
#         case "$SNAPSHOT_PROVIDER" in
    
#           "polkachu")
#             SNAPSHOT_URL=$(curl -s https://polkachu.com/tendermint_snapshots/akash | grep tar.lz4 | head -n1 | grep -io '<a href=['"'"'"][^"'"'"']*['"'"'"]' |   sed -e 's/^<a href=["'"'"']//i' -e 's/["'"'"']$//i')
#             echo "Using latest Polkachu blockchain snapshot, $SNAPSHOT_URL"
#             aria2c --out=snapshot.tar.lz4 --summary-interval 15 --check-certificate=false --max-tries=99 --retry-wait=5 --always-resume=true --max-file-not-found=99 --conditional-get=true -s 4 -x 4 -k 1M -j 1 "$SNAPSHOT_URL"
#             lz4 -c -d snapshot.tar.lz4 | tar -x -C "$AKASH_HOME"
#             rm -f snapshot.tar.lz4
#             ;;
#           "autostake")
#     	SNAP_NAME=$(curl -s http://snapshots.autostake.net/akashnet-2/ | egrep -o ">akashnet-2.*.tar.lz4" | tr -d ">" | tail -1)
#     	wget -O - http://snapshots.autostake.net/akashnet-2/$SNAP_NAME | lz4 -d | tar -xf - -C "$AKASH_HOME"
#     	;;
    
#           *)
#             SNAPSHOT_URL=$(curl -s https://cosmos-snapshots.s3.filebase.com/akash/pruned/snapshot.json | jq -r .latest)
#             echo "Using latest Cosmos blockchain snapshot, $SNAPSHOT_URL"
#             aria2c --out=snapshot.tar.gz --summary-interval 15 --check-certificate=false --max-tries=99 --retry-wait=5 --always-resume=true --max-file-not-found=99 --conditional-get=true -s 16 -x 16 -k 1M -j 1 "$SNAPSHOT_URL"
#             tar -zxvf snapshot.tar.gz
#             rm -f snapshot.tar.gz
#             ;;
    
#         esac
    
#       fi
#     fi
#     else
#       echo "Found Akash data folder!"
#       cd "$AKASH_HOME/data" || exit
#     fi
    
#     if [[ $AKASH_DEBUG == "true" ]]; then sleep 5000; fi
# ---
# # Source: akash-node/templates/service.yaml
# apiVersion: v1
# kind: Service
# metadata:
#   name: akash-node-1
#   namespace: akash-services
# spec:
#   type: ClusterIP
#   ports:
#     - port: 1317
#       name: akashd-api
#     - port: 9090
#       name: akashd-grpc
#     - port: 26656
#       name: akashd-p2p
#     - port: 26657
#       name: akashd-rpc
#   selector:
#     akash.network/node: "1"
# ---
# # Source: akash-node/templates/statefulset.yaml
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: akash-node-1
#   namespace: akash-services
#   labels:
#     app: akash-node
#     akash.network/node: "1"
# spec:
#   replicas: 1
#   serviceName: akash-node
#   selector:
#     matchLabels:
#       app: akash-node
#       akash.network/node: "1"
#   template:
#     metadata:
#       labels:
#         app: akash-node
#         akash.network/node: "1"
#     spec:
#       serviceAccountName: akash-node
#       securityContext:
#         {}
#       initContainers:
#         - name: init
#           securityContext:
#             {}
#           image: "ghcr.io/akash-network/node:0.22.0"
#           command: [ "/bin/bash" , "/config/init.sh" ]
#           imagePullPolicy: IfNotPresent
#           env:
#             - name: AKASH_MONIKER
#               value: mynode-1
#             - name: AKASH_NET
#               value: https://raw.githubusercontent.com/akash-network/net/main/mainnet
#             - name: AKASH_HOME
#               value: /root/.akash
#             - name: AKASH_CHAIN_ID
#               value: akashnet-2
#             - name: AKASH_KEYRING_BACKEND
#               value: test
#             - name: AKASH_P2P_PERSISTENT_PEERS
#               value: 267f95c69ae90ac179961d82dee5bead2ea77715@65.108.137.38:26656,85dd710b87d0e5c2e91b98b3da5a9f872a61b782@65.21.136.170:26656,2ff49afb569fb6cbfe837ec1f699e75927d230f4@23.88.67.24:11456,cb6ae22e1e89d029c55f2cb400b0caa19cbe5523@15.222.240.244:26603,b4d30b0023aaf6decd087292a5cb797dd1d4cfea@65.108.67.53:11456,f85fa6df6f03a8fa48ff37a929d72daabbf4e414@47.156.153.124:28656,b9e9f4b5bdc7d816558cc45bb2c77efb4e6d8166@173.27.185.103:26656,aa8cfe6dcad6dae8038e93e53ce71209597f1c12@138.201.8.248:26656,b9285625133d55410dd0f7e0d1f957165b6bb53b@185.216.178.35:26636,6adc00bef235246c90757547d5f0703d6a548460@178.128.82.28:26656,cca5fa8c0cdf2c85fcf3100b3863f67099d74ebb@144.91.95.105:26656,10f046b1d0db753ed49503c1150bd0f70cea6c89@74.96.87.62:26656,43544bc781b88d6785420427926d86a5332940b3@142.132.131.184:26656,21f2000ce742606f3a764d0f27c6ece0ffdff357@65.108.6.185:26656,106b7a61b2d289ed8f7ff52c77d39a97bc1afee5@85.10.216.131:26656,e4d57288fd145c58dc2f1b3b3ef5eaab95070cc1@45.34.1.114:28656,05c30fd95b888ca8df8171ce65a06f1de683d6e3@84.252.129.17:26656,9bca6d87a4a01d77cc7503ef5f5291ff131223d6@89.149.218.67:26656,0ecc848709fa1d9a85899086910b245626bad758@31.7.207.245:26656,ee695c9cbb345fbf60a98a182fa702200d1432f6@88.198.26.29:26656,af570853d04941c1cba7694bda4c36bd1cff0e75@65.108.14.96:28956,6cceba286b498d4a1931f85e35ea0fa433373057@88.198.128.175:26656,be3a538cebb28e7224db10920bb7fe32456e1aad@116.202.244.153:26656,0393c19b176d1cf8bc560c5a8fa990301deb1a7e@95.216.235.55:26656,20180c45451739668f6e272e007818139dba31e7@88.198.62.198:2020,42f173cf91e2ed30a9ad2526a61c1bb8a5f94448@89.149.218.76:26656,bba10290da32f3cb41e15c3a192413666ce05cee@5.9.208.15:26656,840fca1ad59e7f48fde5f45082465fc2b40f7d6a@135.181.60.250:28956,8e4e1f1e087c76c71c64e477e95495833da82aa2@95.217.65.55:26656,82064b099c8c4c0ebf8bdeb6a9093aeb76a293b3@176.57.188.225:26696,52dfaaf443f635e5c9874623b5e95d21ff708613@167.88.61.242:26656,070b3c936e2995bc269a2981702b87de05411baa@148.251.13.186:28656,ee82fc8fb0f532078904ba4d70ca2fdfdea11a09@167.88.61.139:26656,30b8008d4ea5069a8724a0aa73833493efa88e67@65.108.140.62:26656,16521dc41bd06acaaa8baa2d08574ccd6703798d@51.79.176.203:56656,b0191eea5e539a1295f16251ea4a36cbce69ad42@65.21.202.37:28956,82588f011491c6100d922d133f52fc23460b9231@95.217.91.239:26656,6dfd5df6165a7bb60c92380a14d3bb67ab35a871@64.225.67.248:26656,7718cdffbb99c82e64f2db1381efdcd7de0a54a6@147.182.193.92:26656,f945f7c85cd3fd772b17fd011602bc550b943c86@176.9.188.21:26656,8a210f1bcfc9015a7bc18dcc5add29c0dce3f2dc@95.217.70.63:26656,e9f23228faffd9af9d77e0cd65bba1a37e226ca4@13.213.115.164:26656,2d58f8dccc80e24fb406b0abb4cbf3eba7fc7d01@50.18.140.207:26656,8b9e4b558b1c5bb3144c97985f0ba1509c134ee7@96.43.141.170:26656,97e4468ac589eac505a800411c635b14511a61bb@5.9.239.239:26656,c124ce0b508e8b9ed1c5b6957f362225659b5343@136.243.248.191:26656,ebeea522e069f9037876e13f73310a601cfcff8a@95.179.212.224:26656,ff91c835871dc57a028fdb8d312200b5ddcd952f@51.222.249.140:26656,e4fa0383a59a023bd1c8a44f651e5a351c1246f2@198.204.240.170:26656,72808552759ead80b853bca58b08f10be9dd144e@185.213.26.158:26656
#             - name: AKASH_PRUNING
#               value: "default"
#             - name: AKASH_IAVL_DISABLE_FASTNODE
#               value: "true"
#             - name: AKASH_P2P_LADDR
#               value: tcp://0.0.0.0:26656
#             - name: AKASH_RPC_LADDR
#               value: tcp://0.0.0.0:26657
#             - name: AKASH_RPC_PPROF_LADDR
#               value: 0.0.0.0:6060
#             - name: AKASH_GRPC_ADDRESS
#               value: 0.0.0.0:9090
#             - name: AKASH_P2P_ADDR_BOOK_STRICT
#               value: "false"
#             - name: AKASH_ROSETTA_ENABLE
#               value: "false"
#             - name: AKASH_P2P_SEED_MODE
#               value: "true"
#             - name: AKASH_P2P_PEX
#               value: "true"
#             - name: AKASH_DEBUG
#               value: "false"
#             - name: AKASH_MINIMUM_GAS_PRICES
#               value: "0.025uakt"
#             - name: SNAPSHOT_PROVIDER
#               value: "polkachu"
#             - name: AKASH_API_ENABLE
#               value: "false"
#           ports:
#             - containerPort: 1317
#               name: akashd-api
#             - containerPort: 9090
#               name: akashd-grpc
#             - containerPort: 26656
#               name: akashd-p2p
#             - containerPort: 26657
#               name: akashd-rpc
#           volumeMounts:
#             - name: config
#               mountPath: /config
#               readOnly: true
#             - name: home
#               mountPath: "/root/.akash"
#           resources:
#             {}
#       containers:
#         - name: akash-node
#           securityContext:
#             {}
#           image: "ghcr.io/akash-network/node:0.22.0"
#           command: [ "/bin/akash" , "start" ]
#           imagePullPolicy: IfNotPresent
#           env:
#             - name: AKASH_MONIKER
#               value: mynode-1
#             - name: AKASH_NET
#               value: https://raw.githubusercontent.com/akash-network/net/main/mainnet
#             - name: AKASH_HOME
#               value: /root/.akash
#             - name: AKASH_CHAIN_ID
#               value: akashnet-2
#             - name: AKASH_KEYRING_BACKEND
#               value: test
#             - name: AKASH_P2P_PERSISTENT_PEERS
#               value: 267f95c69ae90ac179961d82dee5bead2ea77715@65.108.137.38:26656,85dd710b87d0e5c2e91b98b3da5a9f872a61b782@65.21.136.170:26656,2ff49afb569fb6cbfe837ec1f699e75927d230f4@23.88.67.24:11456,cb6ae22e1e89d029c55f2cb400b0caa19cbe5523@15.222.240.244:26603,b4d30b0023aaf6decd087292a5cb797dd1d4cfea@65.108.67.53:11456,f85fa6df6f03a8fa48ff37a929d72daabbf4e414@47.156.153.124:28656,b9e9f4b5bdc7d816558cc45bb2c77efb4e6d8166@173.27.185.103:26656,aa8cfe6dcad6dae8038e93e53ce71209597f1c12@138.201.8.248:26656,b9285625133d55410dd0f7e0d1f957165b6bb53b@185.216.178.35:26636,6adc00bef235246c90757547d5f0703d6a548460@178.128.82.28:26656,cca5fa8c0cdf2c85fcf3100b3863f67099d74ebb@144.91.95.105:26656,10f046b1d0db753ed49503c1150bd0f70cea6c89@74.96.87.62:26656,43544bc781b88d6785420427926d86a5332940b3@142.132.131.184:26656,21f2000ce742606f3a764d0f27c6ece0ffdff357@65.108.6.185:26656,106b7a61b2d289ed8f7ff52c77d39a97bc1afee5@85.10.216.131:26656,e4d57288fd145c58dc2f1b3b3ef5eaab95070cc1@45.34.1.114:28656,05c30fd95b888ca8df8171ce65a06f1de683d6e3@84.252.129.17:26656,9bca6d87a4a01d77cc7503ef5f5291ff131223d6@89.149.218.67:26656,0ecc848709fa1d9a85899086910b245626bad758@31.7.207.245:26656,ee695c9cbb345fbf60a98a182fa702200d1432f6@88.198.26.29:26656,af570853d04941c1cba7694bda4c36bd1cff0e75@65.108.14.96:28956,6cceba286b498d4a1931f85e35ea0fa433373057@88.198.128.175:26656,be3a538cebb28e7224db10920bb7fe32456e1aad@116.202.244.153:26656,0393c19b176d1cf8bc560c5a8fa990301deb1a7e@95.216.235.55:26656,20180c45451739668f6e272e007818139dba31e7@88.198.62.198:2020,42f173cf91e2ed30a9ad2526a61c1bb8a5f94448@89.149.218.76:26656,bba10290da32f3cb41e15c3a192413666ce05cee@5.9.208.15:26656,840fca1ad59e7f48fde5f45082465fc2b40f7d6a@135.181.60.250:28956,8e4e1f1e087c76c71c64e477e95495833da82aa2@95.217.65.55:26656,82064b099c8c4c0ebf8bdeb6a9093aeb76a293b3@176.57.188.225:26696,52dfaaf443f635e5c9874623b5e95d21ff708613@167.88.61.242:26656,070b3c936e2995bc269a2981702b87de05411baa@148.251.13.186:28656,ee82fc8fb0f532078904ba4d70ca2fdfdea11a09@167.88.61.139:26656,30b8008d4ea5069a8724a0aa73833493efa88e67@65.108.140.62:26656,16521dc41bd06acaaa8baa2d08574ccd6703798d@51.79.176.203:56656,b0191eea5e539a1295f16251ea4a36cbce69ad42@65.21.202.37:28956,82588f011491c6100d922d133f52fc23460b9231@95.217.91.239:26656,6dfd5df6165a7bb60c92380a14d3bb67ab35a871@64.225.67.248:26656,7718cdffbb99c82e64f2db1381efdcd7de0a54a6@147.182.193.92:26656,f945f7c85cd3fd772b17fd011602bc550b943c86@176.9.188.21:26656,8a210f1bcfc9015a7bc18dcc5add29c0dce3f2dc@95.217.70.63:26656,e9f23228faffd9af9d77e0cd65bba1a37e226ca4@13.213.115.164:26656,2d58f8dccc80e24fb406b0abb4cbf3eba7fc7d01@50.18.140.207:26656,8b9e4b558b1c5bb3144c97985f0ba1509c134ee7@96.43.141.170:26656,97e4468ac589eac505a800411c635b14511a61bb@5.9.239.239:26656,c124ce0b508e8b9ed1c5b6957f362225659b5343@136.243.248.191:26656,ebeea522e069f9037876e13f73310a601cfcff8a@95.179.212.224:26656,ff91c835871dc57a028fdb8d312200b5ddcd952f@51.222.249.140:26656,e4fa0383a59a023bd1c8a44f651e5a351c1246f2@198.204.240.170:26656,72808552759ead80b853bca58b08f10be9dd144e@185.213.26.158:26656
#             - name: AKASH_PRUNING
#               value: "default"
#             - name: AKASH_IAVL_DISABLE_FASTNODE
#               value: "true"
#             - name: AKASH_P2P_LADDR
#               value: tcp://0.0.0.0:26656
#             - name: AKASH_RPC_LADDR
#               value: tcp://0.0.0.0:26657
#             - name: AKASH_RPC_PPROF_LADDR
#               value: 0.0.0.0:6060
#             - name: AKASH_GRPC_ADDRESS
#               value: 0.0.0.0:9090
#             - name: AKASH_P2P_ADDR_BOOK_STRICT
#               value: "false"
#             - name: AKASH_ROSETTA_ENABLE
#               value: "false"
#             - name: AKASH_P2P_SEED_MODE
#               value: "true"
#             - name: AKASH_P2P_PEX
#               value: "true"
#             - name: AKASH_DEBUG
#               value: "false"
#             - name: AKASH_MINIMUM_GAS_PRICES
#               value: "0.025uakt"
#             - name: SNAPSHOT_PROVIDER
#               value: "polkachu"
#             - name: AKASH_API_ENABLE
#               value: "false"
#           ports:
#             - containerPort: 1317
#               name: akashd-api
#             - containerPort: 9090
#               name: akashd-grpc
#             - containerPort: 26656
#               name: akashd-p2p
#             - containerPort: 26657
#               name: akashd-rpc
#           volumeMounts:
#             - name: config
#               mountPath: /config
#               readOnly: true
#             - name: home
#               mountPath: "/root/.akash"
#           resources:
#             {}
#       volumes:
#         - name: config
#           configMap:
#             name: akash-node-config
#         - name: home
#           emptyDir: {}
