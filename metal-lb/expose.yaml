# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx
#   namespace: default
#   labels:
#     app: nginx
# status:
#   loadBalancer:
#     ingress:
#       - ip: 192.168.1.96
# spec:
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
#       nodePort: 31778
#   selector:
#     app: nginx
#   clusterIP: 10.43.124.61
#   clusterIPs:
#     - 10.43.124.61
#   type: LoadBalancer
#   sessionAffinity: None
#   externalTrafficPolicy: Cluster
#   ipFamilies:
#     - IPv4
#   ipFamilyPolicy: SingleStack
#   allocateLoadBalancerNodePorts: true
#   internalTrafficPolicy: Cluster

# Source: ingress-nginx/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: ingress-nginx-4.7.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: "1.8.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: external-ingress-nginx-controller
  namespace: ingress-nginx
spec:
  type: LoadBalancer
  ipFamilyPolicy: SingleStack
  ipFamilies: 
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443-tcp
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller